{"ast":null,"code":"import _slicedToArray from\"/Users/batetambetanyi/Documents/tictactoe-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/batetambetanyi/Documents/tictactoe-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/batetambetanyi/Documents/tictactoe-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/batetambetanyi/Documents/tictactoe-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/batetambetanyi/Documents/tictactoe-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/batetambetanyi/Documents/tictactoe-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import Board from'./Board.js';import React,{Component}from'react';import Player from'./player';import InstructionButton from'./instructionButton';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.instructionTextHandler=function(gameState){var winner=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;switch(gameState){case\"playerOneTurn\":_this.setState({instruction:\"It's Player 1's Turn\"});break;case\"playerTwoTurn\":_this.setState({instruction:\"It's Player 2's Turn\"});break;case\"gameEnded\":_this.setState({instruction:\"\".concat(winner,\" won the game, play again?\"),playable:false,gameEnded:true,xIsNext:true});console.log(_this.state.instruction);break;default:return;}};_this.makePlayable=function(){if(_this.state.gameEnded){var squares=Array(9).fill(null);_this.setState({squares:squares});}if(!_this.state.playable){_this.setState({playable:true,instruction:\"Player 1's turn\"});}};_this.changeXisNext=function(){if(_this.state.xIsNext)_this.setState({instruction:\"Player 2's turn\"});else _this.setState({instruction:\"Player 1's turn\"});_this.setState({xIsNext:!_this.state.xIsNext});console.log(_this.state.xIsNext);};_this.clickHandler=function(i){if(_this.state.playable){var squares=_this.state.squares.slice();squares[i]=_this.state.xIsNext?'X':'O';_this.setState({squares:squares});_this.changeXisNext();_this.calculateWinner(squares);}};_this.increaseScore=_this.increaseScore.bind(_assertThisInitialized(_this));_this.state={playable:false,gameEnded:false,xIsNext:true,instruction:'Click me to Play',playerOneScore:0,playerTwoScore:0,squares:Array(9).fill(null)};return _this;}_createClass(App,[{key:\"increaseScore\",value:function increaseScore(player){console.log(this);if(player===\"playerOne\"){this.setState({playerOneScore:this.state.playerOneScore+1});}else{this.setState({playerTwoScore:this.state.playerTwoScore+1});}}},{key:\"calculateWinner\",value:function calculateWinner(squares){var lines=[[0,1,2],[3,4,5],[6,7,8],[0,3,6],[1,4,7],[2,5,8],[0,4,8],[2,4,6]];for(var i=0;i<lines.length;i++){var _lines$i=_slicedToArray(lines[i],3),a=_lines$i[0],b=_lines$i[1],c=_lines$i[2];var winner='playerOne';if(squares[a]&&squares[a]===squares[b]&&squares[a]===squares[c]){console.log(\"Hello\");if(squares[a]==='X')winner=\"playerOne\";else winner='playerTwo';var increase=this.increaseScore;increase(winner);this.instructionTextHandler(\"gameEnded\",winner);}}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"interface\"},/*#__PURE__*/React.createElement(\"div\",{className:\"game\"},/*#__PURE__*/React.createElement(Player,{playerID:'Player One',playerScore:\"Score: \".concat(this.state.playerOneScore)}),/*#__PURE__*/React.createElement(Board,{increaseScore:this.increaseScore,playable:this.state.playable,instructionTextHandler:this.instructionTextHandler,xIsNext:this.state.xIsNext,changeXisNext:this.changeXisNext,squares:this.state.squares,clickHandler:this.clickHandler}),/*#__PURE__*/React.createElement(Player,{playerID:'Player Two',playerScore:\"Score: \".concat(this.state.playerTwoScore)})),/*#__PURE__*/React.createElement(InstructionButton,{text:this.state.instruction,onClick:this.makePlayable}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/batetambetanyi/Documents/tictactoe-react/src/App.js"],"names":["Board","React","Component","Player","InstructionButton","App","props","instructionTextHandler","gameState","winner","setState","instruction","playable","gameEnded","xIsNext","console","log","state","makePlayable","squares","Array","fill","changeXisNext","clickHandler","i","slice","calculateWinner","increaseScore","bind","playerOneScore","playerTwoScore","player","lines","length","a","b","c","increase"],"mappings":"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","sourcesContent":["import Board from './Board.js'\nimport React, { Component } from 'react'\nimport Player from './player'\nimport InstructionButton from './instructionButton'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.increaseScore = this.increaseScore.bind(this);\n    this.state = {\n      \n      playable: false,\n      gameEnded: false,\n      xIsNext: true,\n      instruction: 'Click me to Play',\n      playerOneScore: 0,\n      playerTwoScore: 0,\n      squares: Array(9).fill(null),\n    }\n  }\n\n  increaseScore(player){\n    console.log(this)\n    if(player === \"playerOne\"){\n      this.setState({playerOneScore: this.state.playerOneScore + 1})\n    }\n    else{this.setState({playerTwoScore: this.state.playerTwoScore + 1})}\n  }\n\n  instructionTextHandler = (gameState,winner = null) =>{\n    switch(gameState){\n      case \"playerOneTurn\":\n        this.setState({instruction: \"It's Player 1's Turn\"})\n        break;\n      case \"playerTwoTurn\":\n        this.setState({instruction: \"It's Player 2's Turn\"})\n        break;\n      case \"gameEnded\":\n        this.setState({\n          instruction: `${winner} won the game, play again?`,\n          playable: false,\n          gameEnded: true,\n          xIsNext: true\n\n        })\n        console.log(this.state.instruction)\n        break;\n      default:\n        return\n    }\n\n  }\n\n  makePlayable = () =>{\n    if(this.state.gameEnded){\n      const squares = Array(9).fill(null)\n      this.setState({squares: squares })}\n    if(!this.state.playable){\n      this.setState({\n        playable: true,\n        instruction: \"Player 1's turn\"\n      })\n    }\n    \n  }\n\n  changeXisNext = () =>{\n    if(this.state.xIsNext) this.setState({instruction: \"Player 2's turn\"})\n    else this.setState({instruction: \"Player 1's turn\"})\n    this.setState({xIsNext: !this.state.xIsNext})\n    console.log(this.state.xIsNext)\n  }\n\n  calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      let winner = 'playerOne';\n      \n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        console.log(\"Hello\")\n\n        if(squares[a] === 'X') winner = \"playerOne\";\n        else winner = 'playerTwo';\n        let increase = this.increaseScore;\n        increase(winner);\n        this.instructionTextHandler(\"gameEnded\",winner)\n        \n      }\n    }\n    \n  }\n\n\n  clickHandler = (i) => {\n    if(this.state.playable){\n        const squares = this.state.squares.slice();\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            \n        });\n    this.changeXisNext()\n    this.calculateWinner(squares)\n    \n    }\n    \n  }\n\n\n \n  \n  render() {\n    return (\n      <div className=\"interface\">\n        <div className=\"game\">\n          <Player playerID = {'Player One'} playerScore = {`Score: ${this.state.playerOneScore}`}/>\n          <Board increaseScore={this.increaseScore} \n          playable = {this.state.playable} \n          instructionTextHandler = {this.instructionTextHandler} \n          xIsNext = {this.state.xIsNext} \n          changeXisNext ={this.changeXisNext} \n          squares={this.state.squares}\n          clickHandler = {this.clickHandler}/>\n          <Player playerID = {'Player Two'} playerScore = {`Score: ${this.state.playerTwoScore}`}/>\n        </div>\n        \n        <InstructionButton text={this.state.instruction} onClick = {this.makePlayable}/>\n      </div>\n      \n\n    )\n  }\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}