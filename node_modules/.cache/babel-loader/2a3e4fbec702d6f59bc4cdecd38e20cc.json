{"ast":null,"code":"var _jsxFileName = \"/Users/batetambetanyi/Documents/tictactoe-react/src/App.js\";\nimport Board from './Board.js';\nimport React, { Component } from 'react';\nimport Player from './player';\nimport InstructionButton from './instructionButton';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.instructionTextHandler = (gameState, winner = null) => {\n      switch (gameState) {\n        case \"playerOneTurn\":\n          this.setState({\n            instruction: \"It's Player 1's Turn\"\n          });\n          break;\n\n        case \"playerTwoTurn\":\n          this.setState({\n            instruction: \"It's Player 2's Turn\"\n          });\n          break;\n\n        case \"gameEnded\":\n          this.setState({\n            instruction: `${winner} won the game, play again?`,\n            playable: false,\n            gameEnded: true,\n            xIsNext: true\n          });\n          console.log(this.state.instruction);\n          break;\n\n        default:\n          return;\n      }\n    };\n\n    this.makePlayable = () => {\n      if (this.state.gameEnded) {\n        const squares = Array(9).fill(null);\n        this.setState({\n          squares: squares\n        });\n      }\n\n      if (!this.state.playable) {\n        this.setState({\n          playable: true,\n          instruction: \"Player 1's turn\"\n        });\n      }\n    };\n\n    this.changeXisNext = () => {\n      if (this.state.xIsNext) this.setState({\n        instruction: \"Player 2's turn\"\n      });else this.setState({\n        instruction: \"Player 1's turn\"\n      });\n      this.setState({\n        xIsNext: !this.state.xIsNext\n      });\n      console.log(this.state.xIsNext);\n    };\n\n    this.clickHandler = i => {\n      if (this.state.playable && !this.state.squares[i]) {\n        const squares = this.state.squares.slice();\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n          squares: squares\n        });\n        this.changeXisNext();\n        this.calculateWinner(squares);\n      }\n    };\n\n    this.increaseScore = this.increaseScore.bind(this);\n    this.state = {\n      playable: false,\n      gameEnded: false,\n      xIsNext: true,\n      instruction: 'Click me to Play',\n      playerOneScore: 0,\n      playerTwoScore: 0,\n      squares: Array(9).fill(null)\n    };\n  }\n\n  increaseScore(player) {\n    console.log(this);\n\n    if (player === \"playerOne\") {\n      this.setState({\n        playerOneScore: this.state.playerOneScore + 1\n      });\n    } else {\n      this.setState({\n        playerTwoScore: this.state.playerTwoScore + 1\n      });\n    }\n  }\n\n  calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      let winner = 'playerOne';\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        console.log(\"Hello\");\n        if (squares[a] === 'X') winner = \"playerOne\";else winner = 'playerTwo';\n        let increase = this.increaseScore;\n        increase(winner);\n        this.instructionTextHandler(\"gameEnded\", winner);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"interface\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Player, {\n      playerID: 'Player One',\n      playerScore: `Score: ${this.state.playerOneScore}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      increaseScore: this.increaseScore,\n      clickHandler: this.clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Player, {\n      playerID: 'Player Two',\n      playerScore: `Score: ${this.state.playerTwoScore}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(InstructionButton, {\n      text: this.state.instruction,\n      onClick: this.makePlayable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/batetambetanyi/Documents/tictactoe-react/src/App.js"],"names":["Board","React","Component","Player","InstructionButton","App","constructor","props","instructionTextHandler","gameState","winner","setState","instruction","playable","gameEnded","xIsNext","console","log","state","makePlayable","squares","Array","fill","changeXisNext","clickHandler","i","slice","calculateWinner","increaseScore","bind","playerOneScore","playerTwoScore","player","lines","length","a","b","c","increase","render"],"mappings":"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","sourcesContent":["import Board from './Board.js'\nimport React, { Component } from 'react'\nimport Player from './player'\nimport InstructionButton from './instructionButton'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.increaseScore = this.increaseScore.bind(this);\n    this.state = {\n      \n      playable: false,\n      gameEnded: false,\n      xIsNext: true,\n      instruction: 'Click me to Play',\n      playerOneScore: 0,\n      playerTwoScore: 0,\n      squares: Array(9).fill(null),\n    }\n  }\n\n  increaseScore(player){\n    console.log(this)\n    if(player === \"playerOne\"){\n      this.setState({playerOneScore: this.state.playerOneScore + 1})\n    }\n    else{this.setState({playerTwoScore: this.state.playerTwoScore + 1})}\n  }\n\n  instructionTextHandler = (gameState,winner = null) =>{\n    switch(gameState){\n      case \"playerOneTurn\":\n        this.setState({instruction: \"It's Player 1's Turn\"})\n        break;\n      case \"playerTwoTurn\":\n        this.setState({instruction: \"It's Player 2's Turn\"})\n        break;\n      case \"gameEnded\":\n        this.setState({\n          instruction: `${winner} won the game, play again?`,\n          playable: false,\n          gameEnded: true,\n          xIsNext: true\n\n        })\n        console.log(this.state.instruction)\n        break;\n      default:\n        return\n    }\n\n  }\n\n  makePlayable = () =>{\n    if(this.state.gameEnded){\n      const squares = Array(9).fill(null)\n      this.setState({squares: squares })}\n    if(!this.state.playable){\n      this.setState({\n        playable: true,\n        instruction: \"Player 1's turn\"\n      })\n    }\n    \n  }\n\n  changeXisNext = () =>{\n    if(this.state.xIsNext) this.setState({instruction: \"Player 2's turn\"})\n    else this.setState({instruction: \"Player 1's turn\"})\n    this.setState({xIsNext: !this.state.xIsNext})\n    console.log(this.state.xIsNext)\n  }\n\n  calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n\n      let winner = 'playerOne';\n      \n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        console.log(\"Hello\")\n\n        if(squares[a] === 'X') winner = \"playerOne\";\n        else winner = 'playerTwo';\n        let increase = this.increaseScore;\n        increase(winner);\n        this.instructionTextHandler(\"gameEnded\",winner)\n        \n      }\n    }\n    \n  }\n\n\n  clickHandler = (i) => {\n    if(this.state.playable && !this.state.squares[i]){\n        const squares = this.state.squares.slice();\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\n        this.setState({\n            squares: squares,\n            \n        });\n    this.changeXisNext()\n    this.calculateWinner(squares)\n    \n    }\n    \n  }\n\n\n \n  \n  render() {\n    return (\n      <div className=\"interface\">\n        <div className=\"game\">\n          <Player playerID = {'Player One'} playerScore = {`Score: ${this.state.playerOneScore}`}/>\n          <Board increaseScore={this.increaseScore} \n          \n          clickHandler = {this.clickHandler}/>\n          <Player playerID = {'Player Two'} playerScore = {`Score: ${this.state.playerTwoScore}`}/>\n        </div>\n        \n        <InstructionButton text={this.state.instruction} onClick = {this.makePlayable}/>\n      </div>\n      \n\n    )\n  }\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}