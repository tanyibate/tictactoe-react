{"ast":null,"code":"var _jsxFileName = \"/Users/batetambetanyi/Documents/tictactoe-react/src/App.js\";\nimport Board from './Board.js';\nimport React, { Component } from 'react';\nimport Player from './player';\nimport InstructionButton from './instructionButton';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.instructionTextHandler = (gameState, winner) => {\n      switch (gameState) {\n        case \"playerOneTurn\":\n          this.setState({\n            instruction: \"It's Player 1's Turn\"\n          });\n          break;\n\n        case \"playerTwoTurn\":\n          this.setState({\n            instruction: \"It's Player 2's Turn\"\n          });\n          break;\n\n        case \"gameEnded\":\n          this.setState({\n            instruction: `${winner} won the game, play again?`,\n            playable: false,\n            gameEnded: true\n          });\n          break;\n\n        default:\n          return;\n      }\n    };\n\n    this.increaseScore = this.increaseScore.bind(this);\n    this.state = {\n      playable: false,\n      gameEnded: false,\n      xIsNext: false,\n      instruction: 'Click me to Play',\n      playerOneScore: 0,\n      playerTwoScore: 0\n    };\n  }\n\n  increaseScore(player) {\n    console.log(this);\n\n    if (player === \"playerOne\") {\n      this.setState({\n        playerOneScore: this.state.playerOneScore + 1\n      });\n    } else {\n      this.setState({\n        playerTwoScore: this.state.playerTwoScore + 1\n      });\n    }\n  }\n\n  clickHandler() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"interface\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Player, {\n      playerID: 'Player One',\n      playerScore: `Score: ${this.state.playerOneScore}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      increaseScore: this.increaseScore,\n      playable: this.state.gameState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Player, {\n      playerID: 'Player Two',\n      playerScore: `Score: ${this.state.playerTwoScore}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(InstructionButton, {\n      text: this.state.gameState.instruction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/batetambetanyi/Documents/tictactoe-react/src/App.js"],"names":["Board","React","Component","Player","InstructionButton","App","constructor","props","instructionTextHandler","gameState","winner","setState","instruction","playable","gameEnded","increaseScore","bind","state","xIsNext","playerOneScore","playerTwoScore","player","console","log","clickHandler","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAE1BI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAsBlBC,sBAtBkB,GAsBO,CAACC,SAAD,EAAWC,MAAX,KAAqB;AAC5C,cAAOD,SAAP;AACE,aAAK,eAAL;AACE,eAAKE,QAAL,CAAc;AAACC,YAAAA,WAAW,EAAE;AAAd,WAAd;AACA;;AACF,aAAK,eAAL;AACE,eAAKD,QAAL,CAAc;AAACC,YAAAA,WAAW,EAAE;AAAd,WAAd;AACA;;AACF,aAAK,WAAL;AACE,eAAKD,QAAL,CAAc;AACZC,YAAAA,WAAW,EAAG,GAAEF,MAAO,4BADX;AAEZG,YAAAA,QAAQ,EAAE,KAFE;AAGZC,YAAAA,SAAS,EAAE;AAHC,WAAd;AAMA;;AACF;AACE;AAhBJ;AAmBD,KA1CiB;;AAEhB,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,KAAL,GAAa;AAEXJ,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,SAAS,EAAE,KAHA;AAIXI,MAAAA,OAAO,EAAE,KAJE;AAKXN,MAAAA,WAAW,EAAE,kBALF;AAMXO,MAAAA,cAAc,EAAE,CANL;AAOXC,MAAAA,cAAc,EAAE;AAPL,KAAb;AASD;;AAEDL,EAAAA,aAAa,CAACM,MAAD,EAAQ;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;;AACA,QAAGF,MAAM,KAAK,WAAd,EAA0B;AACxB,WAAKV,QAAL,CAAc;AAACQ,QAAAA,cAAc,EAAE,KAAKF,KAAL,CAAWE,cAAX,GAA4B;AAA7C,OAAd;AACD,KAFD,MAGI;AAAC,WAAKR,QAAL,CAAc;AAACS,QAAAA,cAAc,EAAE,KAAKH,KAAL,CAAWG,cAAX,GAA4B;AAA7C,OAAd;AAA+D;AACrE;;AA0BDI,EAAAA,YAAY,GAAE,CAEb;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAI,YAApB;AAAkC,MAAA,WAAW,EAAK,UAAS,KAAKR,KAAL,CAAWE,cAAe,EAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,aAAa,EAAE,KAAKJ,aAA3B;AAA0C,MAAA,QAAQ,EAAI,KAAKE,KAAL,CAAWR,SAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAI,YAApB;AAAkC,MAAA,WAAW,EAAK,UAAS,KAAKQ,KAAL,CAAWG,cAAe,EAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,eAOE,oBAAC,iBAAD;AAAmB,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWR,SAAX,CAAqBG,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAaD;;AAlEyB;;AAwE5B,eAAeP,GAAf","sourcesContent":["import Board from './Board.js'\nimport React, { Component } from 'react'\nimport Player from './player'\nimport InstructionButton from './instructionButton'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.increaseScore = this.increaseScore.bind(this);\n    this.state = {\n      \n      playable: false,\n      gameEnded: false,\n      xIsNext: false,\n      instruction: 'Click me to Play',\n      playerOneScore: 0,\n      playerTwoScore: 0\n    }\n  }\n\n  increaseScore(player){\n    console.log(this)\n    if(player === \"playerOne\"){\n      this.setState({playerOneScore: this.state.playerOneScore + 1})\n    }\n    else{this.setState({playerTwoScore: this.state.playerTwoScore + 1})}\n  }\n\n  instructionTextHandler = (gameState,winner) =>{\n    switch(gameState){\n      case \"playerOneTurn\":\n        this.setState({instruction: \"It's Player 1's Turn\"})\n        break;\n      case \"playerTwoTurn\":\n        this.setState({instruction: \"It's Player 2's Turn\"})\n        break;\n      case \"gameEnded\":\n        this.setState({\n          instruction: `${winner} won the game, play again?`,\n          playable: false,\n          gameEnded: true\n\n        })\n        break;\n      default:\n        return\n    }\n\n  }\n\n  required \n\n  clickHandler(){\n\n  }\n  \n  render() {\n    return (\n      <div className=\"interface\">\n        <div className=\"game\">\n          <Player playerID = {'Player One'} playerScore = {`Score: ${this.state.playerOneScore}`}/>\n          <Board increaseScore={this.increaseScore} playable = {this.state.gameState}/>\n          <Player playerID = {'Player Two'} playerScore = {`Score: ${this.state.playerTwoScore}`}/>\n        </div>\n        \n        <InstructionButton text={this.state.gameState.instruction}/>\n      </div>\n      \n\n    )\n  }\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}