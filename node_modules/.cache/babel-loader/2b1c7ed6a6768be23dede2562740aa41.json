{"ast":null,"code":"var _jsxFileName = \"/Users/batetambetanyi/Documents/tictactoe-react/src/App.js\";\nimport Board from './Board.js';\nimport React, { Component } from 'react';\nimport Player from './player';\nimport InstructionButton from './instructionButton';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.instructionTextHandler = (gameState, winner = null) => {\n      switch (gameState) {\n        case \"playerOneTurn\":\n          this.setState({\n            instruction: \"It's Player 1's Turn\"\n          });\n          break;\n\n        case \"playerTwoTurn\":\n          this.setState({\n            instruction: \"It's Player 2's Turn\"\n          });\n          break;\n\n        case \"gameEnded\":\n          this.setState({\n            instruction: `${winner} won the game, play again?`,\n            playable: false,\n            gameEnded: true,\n            xIsNext: true\n          });\n          console.log(this.state.instruction);\n          break;\n\n        default:\n          return;\n      }\n    };\n\n    this.makePlayable = () => {\n      if (!this.state.playable) {\n        this.setState({\n          playable: true,\n          instruction: \"Player 1's turn\"\n        });\n      }\n    };\n\n    this.changeXisNext = () => {\n      if (this.state.xIsNext) this.setState({\n        instruction: \"Player 2's turn\"\n      });else this.setState({\n        instruction: \"Player 1's turn\"\n      });\n      this.setState({\n        xIsNext: !this.state.xIsNext\n      });\n      console.log(this.state.xIsNext);\n    };\n\n    this.increaseScore = this.increaseScore.bind(this);\n    this.state = {\n      playable: false,\n      gameEnded: false,\n      xIsNext: false,\n      instruction: 'Click me to Play',\n      playerOneScore: 0,\n      playerTwoScore: 0\n    };\n  }\n\n  increaseScore(player) {\n    console.log(this);\n\n    if (player === \"playerOne\") {\n      this.setState({\n        playerOneScore: this.state.playerOneScore + 1\n      });\n    } else {\n      this.setState({\n        playerTwoScore: this.state.playerTwoScore + 1\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"interface\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Player, {\n      playerID: 'Player One',\n      playerScore: `Score: ${this.state.playerOneScore}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Board, {\n      increaseScore: this.increaseScore,\n      playable: this.state.playable,\n      instructionTextHandler: this.instructionTextHandler,\n      xIsNext: this.state.xIsNext,\n      changeXisNext: this.changeXisNext,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Player, {\n      playerID: 'Player Two',\n      playerScore: `Score: ${this.state.playerTwoScore}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(InstructionButton, {\n      text: this.state.instruction,\n      onClick: this.makePlayable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/batetambetanyi/Documents/tictactoe-react/src/App.js"],"names":["Board","React","Component","Player","InstructionButton","App","constructor","props","instructionTextHandler","gameState","winner","setState","instruction","playable","gameEnded","xIsNext","console","log","state","makePlayable","changeXisNext","increaseScore","bind","playerOneScore","playerTwoScore","player","render"],"mappings":"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","sourcesContent":["import Board from './Board.js'\nimport React, { Component } from 'react'\nimport Player from './player'\nimport InstructionButton from './instructionButton'\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.increaseScore = this.increaseScore.bind(this);\n    this.state = {\n      \n      playable: false,\n      gameEnded: false,\n      xIsNext: false,\n      instruction: 'Click me to Play',\n      playerOneScore: 0,\n      playerTwoScore: 0\n    }\n  }\n\n  increaseScore(player){\n    console.log(this)\n    if(player === \"playerOne\"){\n      this.setState({playerOneScore: this.state.playerOneScore + 1})\n    }\n    else{this.setState({playerTwoScore: this.state.playerTwoScore + 1})}\n  }\n\n  instructionTextHandler = (gameState,winner = null) =>{\n    switch(gameState){\n      case \"playerOneTurn\":\n        this.setState({instruction: \"It's Player 1's Turn\"})\n        break;\n      case \"playerTwoTurn\":\n        this.setState({instruction: \"It's Player 2's Turn\"})\n        break;\n      case \"gameEnded\":\n        this.setState({\n          instruction: `${winner} won the game, play again?`,\n          playable: false,\n          gameEnded: true,\n          xIsNext: true\n\n        })\n        console.log(this.state.instruction)\n        break;\n      default:\n        return\n    }\n\n  }\n\n  makePlayable = () =>{\n    if(!this.state.playable){\n      this.setState({\n        playable: true,\n        instruction: \"Player 1's turn\"\n      })\n    }\n  }\n\n  changeXisNext = () =>{\n    if(this.state.xIsNext) this.setState({instruction: \"Player 2's turn\"})\n    else this.setState({instruction: \"Player 1's turn\"})\n    this.setState({xIsNext: !this.state.xIsNext})\n    console.log(this.state.xIsNext)\n  }\n\n\n \n  \n  render() {\n    return (\n      <div className=\"interface\">\n        <div className=\"game\">\n          <Player playerID = {'Player One'} playerScore = {`Score: ${this.state.playerOneScore}`}/>\n          <Board increaseScore={this.increaseScore} playable = {this.state.playable} instructionTextHandler = {this.instructionTextHandler} xIsNext = {this.state.xIsNext} changeXisNext ={this.changeXisNext}/>\n          <Player playerID = {'Player Two'} playerScore = {`Score: ${this.state.playerTwoScore}`}/>\n        </div>\n        \n        <InstructionButton text={this.state.instruction} onClick = {this.makePlayable}/>\n      </div>\n      \n\n    )\n  }\n}\n\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}