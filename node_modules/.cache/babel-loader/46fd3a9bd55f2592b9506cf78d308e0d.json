{"ast":null,"code":"var _jsxFileName = \"/Users/batetambetanyi/Documents/tictactoe-react/src/Board.js\";\nimport React from 'react';\nimport Square from './Square.js';\nexport default function Board(props) {\n  function renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      char: props.state.squares[i],\n      onClick: () => this.clickHandler(i),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, renderSquare(0), renderSquare(1), renderSquare(2)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  }, renderSquare(3), renderSquare(4), renderSquare(5)), /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, renderSquare(6), renderSquare(7), renderSquare(8))));\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/batetambetanyi/Documents/tictactoe-react/src/Board.js"],"names":["React","Square","Board","props","renderSquare","i","state","squares","clickHandler","calculateWinner","lines","length","a","b","c"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAGhC,WAASC,YAAT,CAAsBC,CAAtB,EAAwB;AACpB,wBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAIF,KAAK,CAACG,KAAN,CAAYC,OAAZ,CAAoBF,CAApB,CAAhB;AAAwC,MAAA,OAAO,EAAG,MAAI,KAAKG,YAAL,CAAkBH,CAAlB,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAGG,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,YAAY,CAAC,CAAD,CADjB,EAEKA,YAAY,CAAC,CAAD,CAFjB,EAGKA,YAAY,CAAC,CAAD,CAHjB,CADA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YAAY,CAAC,CAAD,CADjB,EAEKA,YAAY,CAAC,CAAD,CAFjB,EAGKA,YAAY,CAAC,CAAD,CAHjB,CANA,eAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YAAY,CAAC,CAAD,CADjB,EAEKA,YAAY,CAAC,CAAD,CAFjB,EAGKA,YAAY,CAAC,CAAD,CAHjB,CAXA,CADJ,CADJ;AAuBP;;AAGD,SAASK,eAAT,CAAyBF,OAAzB,EAAkC;AAC9B,QAAMG,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,KAAK,CAACC,MAA1B,EAAkCN,CAAC,EAAnC,EAAuC;AACrC,UAAM,CAACO,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYJ,KAAK,CAACL,CAAD,CAAvB;;AACA,QAAIE,OAAO,CAACK,CAAD,CAAP,IAAcL,OAAO,CAACK,CAAD,CAAP,KAAeL,OAAO,CAACM,CAAD,CAApC,IAA2CN,OAAO,CAACK,CAAD,CAAP,KAAeL,OAAO,CAACO,CAAD,CAArE,EAA0E;AACxE,aAAOP,OAAO,CAACK,CAAD,CAAd;AACD;AACF;;AACD,SAAO,IAAP;AACD","sourcesContent":["import React from 'react'\nimport Square from './Square.js'\n\n\nexport default function Board(props){\n    \n\n    function renderSquare(i){\n        return(\n            <Square char = {props.state.squares[i]} onClick ={()=>this.clickHandler(i)}/>\n        )\n    }\n\n    \n        return(\n            <table>\n                <tbody>\n                <tr>\n                    {renderSquare(0)}\n                    {renderSquare(1)}\n                    {renderSquare(2)}\n                </tr>\n                <tr>\n                    {renderSquare(3)}\n                    {renderSquare(4)}\n                    {renderSquare(5)}\n                </tr>\n                <tr>\n                    {renderSquare(6)}\n                    {renderSquare(7)}\n                    {renderSquare(8)}\n                </tr></tbody>\n            </table>\n        )\n    \n\n\n}\n\n\nfunction calculateWinner(squares) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n"]},"metadata":{},"sourceType":"module"}