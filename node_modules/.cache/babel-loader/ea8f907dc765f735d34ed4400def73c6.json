{"ast":null,"code":"var _jsxFileName = \"/Users/batetambetanyi/Documents/tictactoe-react/src/Board.js\";\nimport React from 'react';\nimport Square from './Square.js';\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props); //this.clickHandler = this.clickHandler.bind(this);\n\n    this.state = {\n      squares: Array(9).fill(null)\n    };\n  }\n\n  calculateWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      let winner = 'playerOne';\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        console.log(\"Hello\");\n        if (squares[a] === 'X') winner = \"playerOne\";else winner = 'playerTwo';\n        let increase = this.props.increaseScore;\n        increase(winner);\n        this.props.instructionTextHandler(\"gameEnded\", winner);\n      }\n    }\n  }\n\n  clickHandler(i) {\n    if (this.props.playable) {\n      this.props.changeXisNext(i);\n      const squares = this.state.squares.slice();\n      this.calculateWinner(squares);\n    }\n  }\n\n  renderSquare(i) {\n    return /*#__PURE__*/React.createElement(Square, {\n      onClick: () => this.clickHandler(i),\n      char: this.props.squares[i],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Tic  \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 26\n      }\n    }, \"X\"), \"  Tac  \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 47\n      }\n    }, \"O\"), \"  Toe  \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 68\n      }\n    }, \"X\")), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/batetambetanyi/Documents/tictactoe-react/src/Board.js"],"names":["React","Square","Board","Component","constructor","props","state","squares","Array","fill","calculateWinner","lines","i","length","a","b","c","winner","console","log","increase","increaseScore","instructionTextHandler","clickHandler","playable","changeXisNext","slice","renderSquare","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Square from './Square.js'\n\n\nexport default class Board extends React.Component{\n\n    constructor(props){\n        super(props)\n        //this.clickHandler = this.clickHandler.bind(this);\n        this.state = {\n            \n            squares: Array(9).fill(null),\n            \n        }\n      }\n    \n      calculateWinner(squares) {\n        const lines = [\n          [0, 1, 2],\n          [3, 4, 5],\n          [6, 7, 8],\n          [0, 3, 6],\n          [1, 4, 7],\n          [2, 5, 8],\n          [0, 4, 8],\n          [2, 4, 6],\n        ];\n        for (let i = 0; i < lines.length; i++) {\n          const [a, b, c] = lines[i];\n\n          let winner = 'playerOne';\n          \n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n            console.log(\"Hello\")\n\n            if(squares[a] === 'X') winner = \"playerOne\";\n            else winner = 'playerTwo';\n            let increase = this.props.increaseScore;\n            increase(winner);\n            this.props.instructionTextHandler(\"gameEnded\",winner)\n            \n          }\n        }\n        \n      }\n    \n    \n      clickHandler(i){\n        if(this.props.playable){\n            \n            this.props.changeXisNext(i)\n            const squares = this.state.squares.slice();\n            this.calculateWinner(squares)\n        \n        }\n        \n      }\n    \n\n    renderSquare(i){\n        return(\n            <Square onClick ={()=>this.clickHandler(i)} char = {this.props.squares[i]}/>\n        )\n    }\n\n    render(){\n        return(\n            <div className=\"main\">\n                <h1>Tic  <span>X</span>  Tac  <span>O</span>  Toe  <span>X</span></h1>\n                <table>\n                    <tbody>\n                        <tr>\n                            {this.renderSquare(0)}\n                            {this.renderSquare(1)}\n                            {this.renderSquare(2)}\n                        </tr>\n                        <tr>\n                            {this.renderSquare(3)}\n                            {this.renderSquare(4)}\n                            {this.renderSquare(5)}\n                        </tr>\n                        <tr>\n                            {this.renderSquare(6)}\n                            {this.renderSquare(7)}\n                            {this.renderSquare(8)}\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n            \n        )\n    }\n        \n    \n\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}